/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/common/sinkbindingselectionmode.go:44:32,"			if sinkBindingSelectionMode == """" {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/common/defaultbroker.go:69:26,"			if defaultBrokerClass == """" {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/ha.go:55:9,"		if ha == nil || ha.Replicas == nil {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/resources.go:48:66,"				if override := find(resources, containers[i].Name); override != nil {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:53:22,"	if strings.EqualFold(version, LATEST_VERSION) {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:57:44,"	if len(instance.GetSpec().GetManifests()) == 0 {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:58:14,"		if version == """" {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:62:30,"		if SanitizeSemver(version) == semver.MajorMinor(SanitizeSemver(version)) {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:74:44,"	if len(instance.GetSpec().GetManifests()) == 0 {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:125:19,"	if targetVersion == LATEST_VERSION {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:129:20,"	if !semver.IsValid(target) {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:133:37,"	if len(strings.Split(target, ""."")) < 2 {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:140:13,"	if current == """" || current == LATEST_VERSION {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:140:30,"	if current == """" || current == LATEST_VERSION {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:157:18,"	if currentMajor != targetMajor {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:162:33,"		if semver.MajorMinor(current) == ""v0.26"" && semver.MajorMinor(target) == ""v1.0"" {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:162:73,"		if semver.MajorMinor(current) == ""v0.26"" && semver.MajorMinor(target) == ""v1.0"" {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:167:32,"		if semver.MajorMinor(target) == ""v0.26"" && semver.MajorMinor(current) == ""v1.0"" {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:167:73,"		if semver.MajorMinor(target) == ""v0.26"" && semver.MajorMinor(current) == ""v1.0"" {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:190:45,"		if len(instance.GetSpec().GetManifests()) == 0 {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:311:54,"	if len(instance.GetSpec().GetAdditionalManifests()) > 0 {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/releases.go:320:70,"	if manifests := instance.GetStatus().GetManifests(); len(manifests) != 0 {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/stages.go:37:49,"		if err := stage(ctx, manifest, instance); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/stages.go:104:13,"	if version == instance.GetStatus().GetVersion() && len(instance.GetSpec().GetAdditionalManifests()) == 0 &&"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/stages.go:104:102,"	if version == instance.GetStatus().GetVersion() && len(instance.GetSpec().GetAdditionalManifests()) == 0 &&"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/stages.go:105:42,"		len(instance.GetSpec().GetManifests()) == 0 &&"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/common/stages.go:106:32,"		targetManifestPath(instance) == strings.Join(installedManifestPath(version, instance), COMMA) {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/client/client.go:93:40,"	if err := json.Unmarshal(bs, to); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/client/client.go:141:33,"	if err := convert(in, uo); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/client/client.go:149:34,"	if err := convert(uo, out); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/client/client.go:169:34,"	if err := convert(uo, out); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/client/client.go:193:34,"	if err := convert(uo, out); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/client/client.go:206:33,"	if err := convert(in, uo); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/client/client.go:214:34,"	if err := convert(uo, out); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/client/client.go:227:33,"	if err := convert(in, uo); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/client/client.go:235:34,"	if err := convert(uo, out); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeserving/ingress/ingress.go:115:44,"	if len(instance.GetSpec().GetManifests()) != 0 {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/source/source.go:70:20,"	if ke.Spec.Source == nil {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/source/source.go:85:25,"	if ke.Spec.Source.Ceph.Enabled {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/source/source.go:89:27,"	if ke.Spec.Source.Github.Enabled {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/source/source.go:93:27,"	if ke.Spec.Source.Gitlab.Enabled {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/source/source.go:97:26,"	if ke.Spec.Source.Kafka.Enabled {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/source/source.go:101:29,"	if ke.Spec.Source.Rabbitmq.Enabled {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/source/source.go:105:26,"	if ke.Spec.Source.Redis.Enabled {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/source/source.go:120:44,"	if len(instance.GetSpec().GetManifests()) != 0 {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/reconciler/operator/v1beta1/knativeeventing/reconciler.go:267:57,"		if err = r.updateStatus(ctx, original, resource); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/reconciler/operator/v1beta1/knativeeventing/reconciler.go:276:20,"	if reconcileEvent != nil {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/reconciler/operator/v1beta1/knativeeventing/reconciler.go:278:24,"		if reconciler.EventAs(reconcileEvent, &event) {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/reconciler/operator/v1beta1/knativeeventing/reconciler.go:289:26,"		if controller.IsSkipKey(reconcileEvent) {"
/home/tyler/acto-ops/knative-operator/pkg/client/injection/reconciler/operator/v1beta1/knativeeventing/controller.go:77:33,"						if ok := promoteFilterFunc(elt); !ok {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/knativeeventing.go:78:53,"	if err := r.extension.Finalize(ctx, original); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/knativeeventing.go:107:60,"	if err := common.IsVersionValidMigrationEligible(ke); err != nil {"
/home/tyler/acto-ops/knative-operator/pkg/reconciler/knativeeventing/knativeeventing.go:113:48,"	if err := r.extension.Reconcile(ctx, ke); err != nil {"
