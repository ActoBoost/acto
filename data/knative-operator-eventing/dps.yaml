apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"eventing-controller","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0","knative.dev/high-availability":"true"},"name":"eventing-controller","namespace":"knative-eventing","ownerReferences":[{"apiVersion":"operator.knative.dev/v1beta1","blockOwnerDeletion":true,"controller":true,"kind":"KnativeEventing","name":"knative-eventing","uid":"a7158f42-437b-4aa4-9b85-4c9ae3c527ff"}]},"spec":{"selector":{"matchLabels":{"app":"eventing-controller"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"eventing-controller","app.kubernetes.io/component":"eventing-controller","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app":"eventing-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"CONFIG_LOGGING_NAME","value":"config-logging"},{"name":"CONFIG_OBSERVABILITY_NAME","value":"config-observability"},{"name":"METRICS_DOMAIN","value":"knative.dev/eventing"},{"name":"APISERVER_RA_IMAGE","value":"gcr.io/knative-releases/knative.dev/eventing/cmd/apiserver_receive_adapter@sha256:15c7910c9756d4c0acddd6640c39922d24da2aeabe01e4e7322ef4ca3bebaf99"},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}}],"image":"gcr.io/knative-releases/knative.dev/eventing/cmd/controller@sha256:204fdaa828603a03b66ee30141ebf88c98881829d6af5f57c34400408d15ec91","name":"eventing-controller","ports":[{"containerPort":9090,"name":"metrics"},{"containerPort":8008,"name":"profiling"}],"resources":{"requests":{"cpu":"100m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"terminationMessagePolicy":"FallbackToLogsOnError"}],"enableServiceLinks":false,"serviceAccountName":"eventing-controller"}}},"status":{}}
      manifestival: new
    creationTimestamp: "2022-08-10T05:38:37Z"
    generation: 2
    labels:
      app.kubernetes.io/component: eventing-controller
      app.kubernetes.io/name: knative-eventing
      app.kubernetes.io/version: 1.6.0
      eventing.knative.dev/release: v1.6.0
      knative.dev/high-availability: "true"
    name: eventing-controller
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: operator.knative.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: KnativeEventing
      name: knative-eventing
      uid: a7158f42-437b-4aa4-9b85-4c9ae3c527ff
    resourceVersion: "1366"
    uid: ed6fc924-37f5-4d82-a9e8-1146a86ffc3a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: eventing-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: eventing-controller
          app.kubernetes.io/component: eventing-controller
          app.kubernetes.io/name: knative-eventing
          app.kubernetes.io/version: 1.6.0
          eventing.knative.dev/release: v1.6.0
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: eventing-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/eventing
          - name: APISERVER_RA_IMAGE
            value: gcr.io/knative-releases/knative.dev/eventing/cmd/apiserver_receive_adapter@sha256:15c7910c9756d4c0acddd6640c39922d24da2aeabe01e4e7322ef4ca3bebaf99
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/controller@sha256:204fdaa828603a03b66ee30141ebf88c98881829d6af5f57c34400408d15ec91
          imagePullPolicy: IfNotPresent
          name: eventing-controller
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 8008
            name: profiling
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: eventing-controller
        serviceAccountName: eventing-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:41Z"
      lastUpdateTime: "2022-08-10T05:38:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:37Z"
      lastUpdateTime: "2022-08-10T05:38:41Z"
      message: ReplicaSet "eventing-controller-779fbf8f65" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"eventing-webhook","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0"},"name":"eventing-webhook","namespace":"knative-eventing","ownerReferences":[{"apiVersion":"operator.knative.dev/v1beta1","blockOwnerDeletion":true,"controller":true,"kind":"KnativeEventing","name":"knative-eventing","uid":"a7158f42-437b-4aa4-9b85-4c9ae3c527ff"}]},"spec":{"selector":{"matchLabels":{"app":"eventing-webhook","role":"eventing-webhook"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"eventing-webhook","app.kubernetes.io/component":"eventing-webhook","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0","role":"eventing-webhook"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app":"eventing-webhook"}},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"CONFIG_LOGGING_NAME","value":"config-logging"},{"name":"METRICS_DOMAIN","value":"knative.dev/eventing"},{"name":"WEBHOOK_NAME","value":"eventing-webhook"},{"name":"WEBHOOK_PORT","value":"8443"},{"name":"SINK_BINDING_SELECTION_MODE","value":"exclusion"},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}}],"image":"gcr.io/knative-releases/knative.dev/eventing/cmd/webhook@sha256:65e83bd39a909fc6ce171750281660e3df2becd6c7b550b5d902d335f3379ae7","livenessProbe":{"httpGet":{"httpHeaders":[{"name":"k-kubelet-probe","value":"webhook"}],"port":8443,"scheme":"HTTPS"},"initialDelaySeconds":120,"periodSeconds":1},"name":"eventing-webhook","ports":[{"containerPort":8443,"name":"https-webhook"},{"containerPort":9090,"name":"metrics"},{"containerPort":8008,"name":"profiling"}],"readinessProbe":{"httpGet":{"httpHeaders":[{"name":"k-kubelet-probe","value":"webhook"}],"port":8443,"scheme":"HTTPS"},"periodSeconds":1},"resources":{"limits":{"cpu":"200m","memory":"200Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"terminationMessagePolicy":"FallbackToLogsOnError"}],"enableServiceLinks":false,"serviceAccountName":"eventing-webhook","terminationGracePeriodSeconds":300}}},"status":{}}
      manifestival: new
    creationTimestamp: "2022-08-10T05:38:38Z"
    generation: 2
    labels:
      app.kubernetes.io/component: eventing-webhook
      app.kubernetes.io/name: knative-eventing
      app.kubernetes.io/version: 1.6.0
      eventing.knative.dev/release: v1.6.0
    name: eventing-webhook
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: operator.knative.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: KnativeEventing
      name: knative-eventing
      uid: a7158f42-437b-4aa4-9b85-4c9ae3c527ff
    resourceVersion: "1376"
    uid: a43e8a4c-eb88-4ac7-98ba-d67d8cb27e03
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: eventing-webhook
        role: eventing-webhook
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: eventing-webhook
          app.kubernetes.io/component: eventing-webhook
          app.kubernetes.io/name: knative-eventing
          app.kubernetes.io/version: 1.6.0
          eventing.knative.dev/release: v1.6.0
          role: eventing-webhook
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: eventing-webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: METRICS_DOMAIN
            value: knative.dev/eventing
          - name: WEBHOOK_NAME
            value: eventing-webhook
          - name: WEBHOOK_PORT
            value: "8443"
          - name: SINK_BINDING_SELECTION_MODE
            value: exclusion
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/webhook@sha256:65e83bd39a909fc6ce171750281660e3df2becd6c7b550b5d902d335f3379ae7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: webhook
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 120
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          name: eventing-webhook
          ports:
          - containerPort: 8443
            name: https-webhook
            protocol: TCP
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 8008
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: webhook
              path: /
              port: 8443
              scheme: HTTPS
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: eventing-webhook
        serviceAccountName: eventing-webhook
        terminationGracePeriodSeconds: 300
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:45Z"
      lastUpdateTime: "2022-08-10T05:38:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:38Z"
      lastUpdateTime: "2022-08-10T05:38:45Z"
      message: ReplicaSet "eventing-webhook-5755489569" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"imc-controller","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0","knative.dev/high-availability":"true"},"name":"imc-controller","namespace":"knative-eventing","ownerReferences":[{"apiVersion":"operator.knative.dev/v1beta1","blockOwnerDeletion":true,"controller":true,"kind":"KnativeEventing","name":"knative-eventing","uid":"a7158f42-437b-4aa4-9b85-4c9ae3c527ff"}]},"spec":{"selector":{"matchLabels":{"messaging.knative.dev/channel":"in-memory-channel","messaging.knative.dev/role":"controller"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/component":"imc-controller","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","messaging.knative.dev/channel":"in-memory-channel","messaging.knative.dev/role":"controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"messaging.knative.dev/channel":"in-memory-channel","messaging.knative.dev/role":"controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"WEBHOOK_NAME","value":"inmemorychannel-webhook"},{"name":"WEBHOOK_PORT","value":"8443"},{"name":"CONFIG_LOGGING_NAME","value":"config-logging"},{"name":"CONFIG_OBSERVABILITY_NAME","value":"config-observability"},{"name":"METRICS_DOMAIN","value":"knative.dev/inmemorychannel-controller"},{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"DISPATCHER_IMAGE","value":"gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_dispatcher@sha256:3163f0a3b3ba5b81c36357df3dd2bff834056f2943c5b395adb497fb97476d20"},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}}],"image":"gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_controller@sha256:97d7db62ea35f7f9199787722c352091987e8816d549c3193ee5683424fef8d0","livenessProbe":{"httpGet":{"httpHeaders":[{"name":"k-kubelet-probe","value":"webhook"}],"port":8443,"scheme":"HTTPS"},"initialDelaySeconds":120,"periodSeconds":1},"name":"controller","ports":[{"containerPort":9090,"name":"metrics"},{"containerPort":8008,"name":"profiling"},{"containerPort":8443,"name":"https-webhook"}],"readinessProbe":{"httpGet":{"httpHeaders":[{"name":"k-kubelet-probe","value":"webhook"}],"port":8443,"scheme":"HTTPS"},"periodSeconds":1},"resources":{},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true}}],"enableServiceLinks":false,"serviceAccountName":"imc-controller","terminationGracePeriodSeconds":300}}},"status":{}}
      manifestival: new
    creationTimestamp: "2022-08-10T05:38:42Z"
    generation: 2
    labels:
      app.kubernetes.io/component: imc-controller
      app.kubernetes.io/name: knative-eventing
      app.kubernetes.io/version: 1.6.0
      eventing.knative.dev/release: v1.6.0
      knative.dev/high-availability: "true"
    name: imc-controller
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: operator.knative.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: KnativeEventing
      name: knative-eventing
      uid: a7158f42-437b-4aa4-9b85-4c9ae3c527ff
    resourceVersion: "1396"
    uid: c90f528e-5f45-4b90-bee6-1ab6cd5c5939
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        messaging.knative.dev/channel: in-memory-channel
        messaging.knative.dev/role: controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: imc-controller
          app.kubernetes.io/name: knative-eventing
          app.kubernetes.io/version: 1.6.0
          messaging.knative.dev/channel: in-memory-channel
          messaging.knative.dev/role: controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    messaging.knative.dev/channel: in-memory-channel
                    messaging.knative.dev/role: controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: WEBHOOK_NAME
            value: inmemorychannel-webhook
          - name: WEBHOOK_PORT
            value: "8443"
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/inmemorychannel-controller
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: DISPATCHER_IMAGE
            value: gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_dispatcher@sha256:3163f0a3b3ba5b81c36357df3dd2bff834056f2943c5b395adb497fb97476d20
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_controller@sha256:97d7db62ea35f7f9199787722c352091987e8816d549c3193ee5683424fef8d0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: webhook
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 120
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 8008
            name: profiling
            protocol: TCP
          - containerPort: 8443
            name: https-webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: webhook
              path: /
              port: 8443
              scheme: HTTPS
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: imc-controller
        serviceAccountName: imc-controller
        terminationGracePeriodSeconds: 300
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:47Z"
      lastUpdateTime: "2022-08-10T05:38:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:42Z"
      lastUpdateTime: "2022-08-10T05:38:47Z"
      message: ReplicaSet "imc-controller-567b4f565b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"imc-dispatcher","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0","knative.dev/high-availability":"true"},"name":"imc-dispatcher","namespace":"knative-eventing","ownerReferences":[{"apiVersion":"operator.knative.dev/v1beta1","blockOwnerDeletion":true,"controller":true,"kind":"KnativeEventing","name":"knative-eventing","uid":"a7158f42-437b-4aa4-9b85-4c9ae3c527ff"}]},"spec":{"selector":{"matchLabels":{"messaging.knative.dev/channel":"in-memory-channel","messaging.knative.dev/role":"dispatcher"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/component":"imc-dispatcher","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","messaging.knative.dev/channel":"in-memory-channel","messaging.knative.dev/role":"dispatcher"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"messaging.knative.dev/channel":"in-memory-channel","messaging.knative.dev/role":"dispatcher"}},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"CONFIG_LOGGING_NAME","value":"config-logging"},{"name":"CONFIG_OBSERVABILITY_NAME","value":"config-observability"},{"name":"METRICS_DOMAIN","value":"knative.dev/inmemorychannel-dispatcher"},{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"CONTAINER_NAME","value":"dispatcher"},{"name":"MAX_IDLE_CONNS","value":"1000"},{"name":"MAX_IDLE_CONNS_PER_HOST","value":"1000"}],"image":"gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_dispatcher@sha256:3163f0a3b3ba5b81c36357df3dd2bff834056f2943c5b395adb497fb97476d20","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":2,"successThreshold":1,"timeoutSeconds":1},"name":"dispatcher","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":9090,"name":"metrics"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"periodSeconds":2,"successThreshold":1,"timeoutSeconds":1},"resources":{},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true}}],"enableServiceLinks":false,"serviceAccountName":"imc-dispatcher"}}},"status":{}}
      manifestival: new
    creationTimestamp: "2022-08-10T05:38:42Z"
    generation: 2
    labels:
      app.kubernetes.io/component: imc-dispatcher
      app.kubernetes.io/name: knative-eventing
      app.kubernetes.io/version: 1.6.0
      eventing.knative.dev/release: v1.6.0
      knative.dev/high-availability: "true"
    name: imc-dispatcher
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: operator.knative.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: KnativeEventing
      name: knative-eventing
      uid: a7158f42-437b-4aa4-9b85-4c9ae3c527ff
    resourceVersion: "1401"
    uid: d579a8f0-02b8-4f6b-80b5-f534f31bbf55
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        messaging.knative.dev/channel: in-memory-channel
        messaging.knative.dev/role: dispatcher
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: imc-dispatcher
          app.kubernetes.io/name: knative-eventing
          app.kubernetes.io/version: 1.6.0
          messaging.knative.dev/channel: in-memory-channel
          messaging.knative.dev/role: dispatcher
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    messaging.knative.dev/channel: in-memory-channel
                    messaging.knative.dev/role: dispatcher
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/inmemorychannel-dispatcher
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: dispatcher
          - name: MAX_IDLE_CONNS
            value: "1000"
          - name: MAX_IDLE_CONNS_PER_HOST
            value: "1000"
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/in_memory/channel_dispatcher@sha256:3163f0a3b3ba5b81c36357df3dd2bff834056f2943c5b395adb497fb97476d20
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          name: dispatcher
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9090
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: imc-dispatcher
        serviceAccountName: imc-dispatcher
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:50Z"
      lastUpdateTime: "2022-08-10T05:38:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:42Z"
      lastUpdateTime: "2022-08-10T05:38:50Z"
      message: ReplicaSet "imc-dispatcher-545bcb44c5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"knative-operator","app.kubernetes.io/part-of":"knative-operator","app.kubernetes.io/version":"1.6.0","operator.knative.dev/release":"v1.6.0"},"name":"knative-operator","namespace":"knative-eventing"},"spec":{"replicas":1,"selector":{"matchLabels":{"name":"knative-operator"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/inject":"false"},"labels":{"app.kubernetes.io/name":"knative-operator","app.kubernetes.io/part-of":"knative-operator","app.kubernetes.io/version":"1.6.0","name":"knative-operator"}},"spec":{"containers":[{"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"METRICS_DOMAIN","value":"knative.dev/operator"},{"name":"CONFIG_LOGGING_NAME","value":"config-logging"},{"name":"CONFIG_OBSERVABILITY_NAME","value":"config-observability"}],"image":"gcr.io/knative-releases/knative.dev/operator/cmd/operator:v1.6.0","imagePullPolicy":"IfNotPresent","name":"knative-operator","ports":[{"containerPort":9090,"name":"metrics"}]}],"serviceAccountName":"knative-operator"}}}}
    creationTimestamp: "2022-08-10T05:38:12Z"
    generation: 1
    labels:
      app.kubernetes.io/name: knative-operator
      app.kubernetes.io/part-of: knative-operator
      app.kubernetes.io/version: 1.6.0
      operator.knative.dev/release: v1.6.0
    name: knative-operator
    namespace: knative-eventing
    resourceVersion: "664"
    uid: a2c564e0-b85e-4008-ba63-1c4961780a2f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: knative-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: "false"
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: knative-operator
          app.kubernetes.io/part-of: knative-operator
          app.kubernetes.io/version: 1.6.0
          name: knative-operator
      spec:
        containers:
        - env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: METRICS_DOMAIN
            value: knative.dev/operator
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          image: gcr.io/knative-releases/knative.dev/operator/cmd/operator:v1.6.0
          imagePullPolicy: IfNotPresent
          name: knative-operator
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: knative-operator
        serviceAccountName: knative-operator
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:17Z"
      lastUpdateTime: "2022-08-10T05:38:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:12Z"
      lastUpdateTime: "2022-08-10T05:38:17Z"
      message: ReplicaSet "knative-operator-79bf74d66d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"mt-broker-controller","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0"},"name":"mt-broker-controller","namespace":"knative-eventing","ownerReferences":[{"apiVersion":"operator.knative.dev/v1beta1","blockOwnerDeletion":true,"controller":true,"kind":"KnativeEventing","name":"knative-eventing","uid":"a7158f42-437b-4aa4-9b85-4c9ae3c527ff"}]},"spec":{"selector":{"matchLabels":{"app":"mt-broker-controller"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"mt-broker-controller","app.kubernetes.io/component":"broker-controller","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app":"mt-broker-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"CONFIG_LOGGING_NAME","value":"config-logging"},{"name":"CONFIG_OBSERVABILITY_NAME","value":"config-observability"},{"name":"METRICS_DOMAIN","value":"knative.dev/eventing"},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}}],"image":"gcr.io/knative-releases/knative.dev/eventing/cmd/mtchannel_broker@sha256:915d73c4d00990d5db5aa1e26b54b128df025cea7b688b95af8f14e1570fb4d4","name":"mt-broker-controller","ports":[{"containerPort":9090,"name":"metrics"},{"containerPort":8008,"name":"profiling"}],"resources":{"requests":{"cpu":"100m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"terminationMessagePolicy":"FallbackToLogsOnError"}],"enableServiceLinks":false,"serviceAccountName":"eventing-controller"}}},"status":{}}
      manifestival: new
    creationTimestamp: "2022-08-10T05:38:44Z"
    generation: 2
    labels:
      app.kubernetes.io/component: mt-broker-controller
      app.kubernetes.io/name: knative-eventing
      app.kubernetes.io/version: 1.6.0
      eventing.knative.dev/release: v1.6.0
    name: mt-broker-controller
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: operator.knative.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: KnativeEventing
      name: knative-eventing
      uid: a7158f42-437b-4aa4-9b85-4c9ae3c527ff
    resourceVersion: "1426"
    uid: 6e87ddf6-e408-4e51-894f-158f91217c84
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: mt-broker-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: mt-broker-controller
          app.kubernetes.io/component: broker-controller
          app.kubernetes.io/name: knative-eventing
          app.kubernetes.io/version: 1.6.0
          eventing.knative.dev/release: v1.6.0
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: mt-broker-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/eventing
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/mtchannel_broker@sha256:915d73c4d00990d5db5aa1e26b54b128df025cea7b688b95af8f14e1570fb4d4
          imagePullPolicy: IfNotPresent
          name: mt-broker-controller
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 8008
            name: profiling
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: eventing-controller
        serviceAccountName: eventing-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:58Z"
      lastUpdateTime: "2022-08-10T05:38:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:44Z"
      lastUpdateTime: "2022-08-10T05:38:58Z"
      message: ReplicaSet "mt-broker-controller-56cc5dc5cc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"broker-filter","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0"},"name":"mt-broker-filter","namespace":"knative-eventing","ownerReferences":[{"apiVersion":"operator.knative.dev/v1beta1","blockOwnerDeletion":true,"controller":true,"kind":"KnativeEventing","name":"knative-eventing","uid":"a7158f42-437b-4aa4-9b85-4c9ae3c527ff"}]},"spec":{"selector":{"matchLabels":{"eventing.knative.dev/brokerRole":"filter"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/component":"broker-filter","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/brokerRole":"filter","eventing.knative.dev/release":"v1.6.0"}},"spec":{"containers":[{"env":[{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"CONTAINER_NAME","value":"filter"},{"name":"CONFIG_LOGGING_NAME","value":"config-logging"},{"name":"CONFIG_OBSERVABILITY_NAME","value":"config-observability"},{"name":"METRICS_DOMAIN","value":"knative.dev/internal/eventing"},{"name":"FILTER_PORT","value":"8080"}],"image":"gcr.io/knative-releases/knative.dev/eventing/cmd/broker/filter@sha256:32d368bcbabee58fad2dd84c39c1d84b6dc5b608cc599d1387add40bae41b000","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":2,"successThreshold":1,"timeoutSeconds":1},"name":"filter","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":9092,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"periodSeconds":2,"successThreshold":1,"timeoutSeconds":1},"resources":{"requests":{"cpu":"100m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError"}],"enableServiceLinks":false,"serviceAccountName":"mt-broker-filter"}}},"status":{}}
      manifestival: new
    creationTimestamp: "2022-08-10T05:38:43Z"
    generation: 2
    labels:
      app.kubernetes.io/component: broker-filter
      app.kubernetes.io/name: knative-eventing
      app.kubernetes.io/version: 1.6.0
      eventing.knative.dev/release: v1.6.0
    name: mt-broker-filter
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: operator.knative.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: KnativeEventing
      name: knative-eventing
      uid: a7158f42-437b-4aa4-9b85-4c9ae3c527ff
    resourceVersion: "1416"
    uid: 159805b1-86be-489a-a71c-e8f69f1b52a3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        eventing.knative.dev/brokerRole: filter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: broker-filter
          app.kubernetes.io/name: knative-eventing
          app.kubernetes.io/version: 1.6.0
          eventing.knative.dev/brokerRole: filter
          eventing.knative.dev/release: v1.6.0
      spec:
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: filter
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/internal/eventing
          - name: FILTER_PORT
            value: "8080"
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/broker/filter@sha256:32d368bcbabee58fad2dd84c39c1d84b6dc5b608cc599d1387add40bae41b000
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          name: filter
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9092
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: mt-broker-filter
        serviceAccountName: mt-broker-filter
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:53Z"
      lastUpdateTime: "2022-08-10T05:38:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:43Z"
      lastUpdateTime: "2022-08-10T05:38:53Z"
      message: ReplicaSet "mt-broker-filter-846dc966c5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"broker-ingress","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0"},"name":"mt-broker-ingress","namespace":"knative-eventing","ownerReferences":[{"apiVersion":"operator.knative.dev/v1beta1","blockOwnerDeletion":true,"controller":true,"kind":"KnativeEventing","name":"knative-eventing","uid":"a7158f42-437b-4aa4-9b85-4c9ae3c527ff"}]},"spec":{"selector":{"matchLabels":{"eventing.knative.dev/brokerRole":"ingress"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/component":"broker-ingress","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/brokerRole":"ingress","eventing.knative.dev/release":"v1.6.0"}},"spec":{"containers":[{"env":[{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}},{"name":"CONTAINER_NAME","value":"ingress"},{"name":"CONFIG_LOGGING_NAME","value":"config-logging"},{"name":"CONFIG_OBSERVABILITY_NAME","value":"config-observability"},{"name":"METRICS_DOMAIN","value":"knative.dev/internal/eventing"},{"name":"INGRESS_PORT","value":"8080"}],"image":"gcr.io/knative-releases/knative.dev/eventing/cmd/broker/ingress@sha256:924bbc1944abb6ab91a8c3d7d6dfbb27f1e55b56ec456b9efc88e4f7320bae2f","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":2,"successThreshold":1,"timeoutSeconds":1},"name":"ingress","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":9092,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"periodSeconds":2,"successThreshold":1,"timeoutSeconds":1},"resources":{"requests":{"cpu":"100m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"FallbackToLogsOnError"}],"enableServiceLinks":false,"serviceAccountName":"mt-broker-ingress"}}},"status":{}}
      manifestival: new
    creationTimestamp: "2022-08-10T05:38:44Z"
    generation: 2
    labels:
      app.kubernetes.io/component: broker-ingress
      app.kubernetes.io/name: knative-eventing
      app.kubernetes.io/version: 1.6.0
      eventing.knative.dev/release: v1.6.0
    name: mt-broker-ingress
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: operator.knative.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: KnativeEventing
      name: knative-eventing
      uid: a7158f42-437b-4aa4-9b85-4c9ae3c527ff
    resourceVersion: "1422"
    uid: 7e0047e2-afa9-4e56-ba7a-2201de78efb9
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        eventing.knative.dev/brokerRole: ingress
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: broker-ingress
          app.kubernetes.io/name: knative-eventing
          app.kubernetes.io/version: 1.6.0
          eventing.knative.dev/brokerRole: ingress
          eventing.knative.dev/release: v1.6.0
      spec:
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: ingress
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/internal/eventing
          - name: INGRESS_PORT
            value: "8080"
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/broker/ingress@sha256:924bbc1944abb6ab91a8c3d7d6dfbb27f1e55b56ec456b9efc88e4f7320bae2f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          name: ingress
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9092
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: mt-broker-ingress
        serviceAccountName: mt-broker-ingress
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:56Z"
      lastUpdateTime: "2022-08-10T05:38:56Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:44Z"
      lastUpdateTime: "2022-08-10T05:38:56Z"
      message: ReplicaSet "mt-broker-ingress-6dbbfff4b9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"operator-webhook","app.kubernetes.io/name":"knative-operator","app.kubernetes.io/version":"1.6.0","operator.knative.dev/release":"v1.6.0"},"name":"operator-webhook","namespace":"knative-eventing"},"spec":{"replicas":0,"selector":{"matchLabels":{"app":"operator-webhook","role":"operator-webhook"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"false","sidecar.istio.io/inject":"false"},"labels":{"app":"operator-webhook","app.kubernetes.io/component":"operator-webhook","app.kubernetes.io/name":"knative-operator","app.kubernetes.io/version":"1.6.0","operator.knative.dev/release":"v1.6.0","role":"operator-webhook"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app":"webhook"}},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"CONFIG_LOGGING_NAME","value":"config-logging"},{"name":"CONFIG_OBSERVABILITY_NAME","value":"config-observability"},{"name":"WEBHOOK_NAME","value":"operator-webhook"},{"name":"WEBHOOK_PORT","value":"8443"},{"name":"METRICS_DOMAIN","value":"knative.dev/operator"}],"image":"gcr.io/knative-releases/knative.dev/operator/cmd/webhook:v1.6.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"httpGet":{"httpHeaders":[{"name":"k-kubelet-probe","value":"webhook"}],"port":8443,"scheme":"HTTPS"},"initialDelaySeconds":120,"periodSeconds":1},"name":"operator-webhook","ports":[{"containerPort":9090,"name":"metrics"},{"containerPort":8008,"name":"profiling"},{"containerPort":8443,"name":"https-webhook"}],"readinessProbe":{"httpGet":{"httpHeaders":[{"name":"k-kubelet-probe","value":"webhook"}],"port":8443,"scheme":"HTTPS"},"periodSeconds":1},"resources":{"limits":{"cpu":"500m","memory":"500Mi"},"requests":{"cpu":"100m","memory":"100Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true}}],"serviceAccountName":"operator-webhook","terminationGracePeriodSeconds":300}}}}
    creationTimestamp: "2022-08-10T05:38:12Z"
    generation: 1
    labels:
      app.kubernetes.io/component: operator-webhook
      app.kubernetes.io/name: knative-operator
      app.kubernetes.io/version: 1.6.0
      operator.knative.dev/release: v1.6.0
    name: operator-webhook
    namespace: knative-eventing
    resourceVersion: "635"
    uid: 1b135787-30ae-48de-bd78-c98d2f500ca1
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: operator-webhook
        role: operator-webhook
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
          sidecar.istio.io/inject: "false"
        creationTimestamp: null
        labels:
          app: operator-webhook
          app.kubernetes.io/component: operator-webhook
          app.kubernetes.io/name: knative-operator
          app.kubernetes.io/version: 1.6.0
          operator.knative.dev/release: v1.6.0
          role: operator-webhook
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: WEBHOOK_NAME
            value: operator-webhook
          - name: WEBHOOK_PORT
            value: "8443"
          - name: METRICS_DOMAIN
            value: knative.dev/operator
          image: gcr.io/knative-releases/knative.dev/operator/cmd/webhook:v1.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: webhook
              path: /
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 120
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          name: operator-webhook
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 8008
            name: profiling
            protocol: TCP
          - containerPort: 8443
            name: https-webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: k-kubelet-probe
                value: webhook
              path: /
              port: 8443
              scheme: HTTPS
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: operator-webhook
        serviceAccountName: operator-webhook
        terminationGracePeriodSeconds: 300
  status:
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:12Z"
      lastUpdateTime: "2022-08-10T05:38:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:12Z"
      lastUpdateTime: "2022-08-10T05:38:12Z"
      message: ReplicaSet "operator-webhook-77f658b885" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"labels":{"app.kubernetes.io/component":"pingsource-mt-adapter","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0"},"name":"pingsource-mt-adapter","namespace":"knative-eventing","ownerReferences":[{"apiVersion":"operator.knative.dev/v1beta1","blockOwnerDeletion":true,"controller":true,"kind":"KnativeEventing","name":"knative-eventing","uid":"a7158f42-437b-4aa4-9b85-4c9ae3c527ff"}]},"spec":{"replicas":0,"selector":{"matchLabels":{"eventing.knative.dev/source":"ping-source-controller","sources.knative.dev/role":"adapter"}},"strategy":{},"template":{"metadata":{"creationTimestamp":null,"labels":{"app.kubernetes.io/component":"pingsource-mt-adapter","app.kubernetes.io/name":"knative-eventing","app.kubernetes.io/version":"1.6.0","eventing.knative.dev/release":"v1.6.0","eventing.knative.dev/source":"ping-source-controller","sources.knative.dev/role":"adapter"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"eventing.knative.dev/source":"ping-source-controller","sources.knative.dev/role":"adapter"}},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"SYSTEM_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"K_METRICS_CONFIG"},{"name":"K_LOGGING_CONFIG"},{"name":"K_LEADER_ELECTION_CONFIG"},{"name":"K_NO_SHUTDOWN_AFTER"},{"name":"K_SINK_TIMEOUT","value":"-1"},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}}],"image":"gcr.io/knative-releases/knative.dev/eventing/cmd/mtping@sha256:d0a3c1c41596d7f98e332e36351faffeb213edc3e444621159d349579035e956","name":"dispatcher","ports":[{"containerPort":9090,"name":"metrics","protocol":"TCP"}],"resources":{"limits":{"cpu":"1","memory":"2Gi"},"requests":{"cpu":"125m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["all"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true}}],"enableServiceLinks":false,"serviceAccountName":"pingsource-mt-adapter"}}},"status":{}}
      manifestival: new
    creationTimestamp: "2022-08-10T05:38:37Z"
    generation: 2
    labels:
      app.kubernetes.io/component: pingsource-mt-adapter
      app.kubernetes.io/name: knative-eventing
      app.kubernetes.io/version: 1.6.0
      eventing.knative.dev/release: v1.6.0
    name: pingsource-mt-adapter
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: operator.knative.dev/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: KnativeEventing
      name: knative-eventing
      uid: a7158f42-437b-4aa4-9b85-4c9ae3c527ff
    resourceVersion: "1371"
    uid: 53a9d8df-b6f7-48b5-bb3f-78a8df91d4ca
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        eventing.knative.dev/source: ping-source-controller
        sources.knative.dev/role: adapter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: pingsource-mt-adapter
          app.kubernetes.io/name: knative-eventing
          app.kubernetes.io/version: 1.6.0
          eventing.knative.dev/release: v1.6.0
          eventing.knative.dev/source: ping-source-controller
          sources.knative.dev/role: adapter
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    eventing.knative.dev/source: ping-source-controller
                    sources.knative.dev/role: adapter
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: K_METRICS_CONFIG
          - name: K_LOGGING_CONFIG
          - name: K_LEADER_ELECTION_CONFIG
          - name: K_NO_SHUTDOWN_AFTER
          - name: K_SINK_TIMEOUT
            value: "-1"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/mtping@sha256:d0a3c1c41596d7f98e332e36351faffeb213edc3e444621159d349579035e956
          imagePullPolicy: IfNotPresent
          name: dispatcher
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 125m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: pingsource-mt-adapter
        serviceAccountName: pingsource-mt-adapter
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2022-08-10T05:38:38Z"
      lastUpdateTime: "2022-08-10T05:38:38Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-08-10T05:38:37Z"
      lastUpdateTime: "2022-08-10T05:39:02Z"
      message: ReplicaSet "pingsource-mt-adapter-856986c668" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
kind: List
metadata:
  resourceVersion: ""
