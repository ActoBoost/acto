[
  [
    "spec.pd.startUpScriptVersion",
    "Start up script version",
    "string",
    null,
    null
  ],
  [
    "spec.pdms.ITEM.config",
    "Config is the Configuration of pd Micro Service servers",
    "opaque",
    null,
    null
  ],
  [
    "spec.pdms.ITEM.startUpScriptVersion",
    "Start up script version",
    "string",
    null,
    null
  ],
  [
    "spec.startScriptV2FeatureFlags",
    "Feature flags used by v2 startup script to enable various features.\nExamples of supported feature flags:\n- WaitForDnsNameIpMatch indicates whether PD and TiKV has to wait until local IP address matches the one published to external DNS\n- PreferPDAddressesOverDiscovery advises start script to use TidbClusterSpec.PDAddresses (if supplied) as argument for pd-server, tikv-server and tidb-server commands",
    "array",
    null,
    null
  ],
  [
    "spec.startScriptV2FeatureFlags.ITEM",
    null,
    "string",
    null,
    null
  ],
  [
    "spec.startScriptVersion",
    "StartScriptVersion is the version of start script\nWhen PD enables microservice mode, pd and pd microservice component will use start script v2.\n\n\ndefault to \"v1\"",
    "string",
    null,
    null
  ],
  [
    "spec.suspendAction",
    "SuspendAction defines the suspend actions for all component.",
    "object",
    {
      "suspendStatefulSet": {
        "type": "boolean"
      }
    },
    null
  ],
  [
    "spec.ticdc.tlsClientSecretNames",
    "TLSClientSecretNames are the names of secrets that store the\nclient certificates for the downstream.",
    "array",
    null,
    null
  ],
  [
    "spec.ticdc.tlsClientSecretNames.ITEM",
    null,
    "string",
    null,
    null
  ],
  [
    "spec.tidb.arguments",
    "Arguments is the extra command line arguments for TiDB server.",
    "array",
    null,
    null
  ],
  [
    "spec.tidb.arguments.ITEM",
    null,
    "string",
    null,
    null
  ],
  [
    "spec.tidb.bootstrapSQLConfigMapName",
    "BootstrapSQLConfigMapName is the name of the ConfigMap which contains the bootstrap SQL file with the key `bootstrap-sql`,\nwhich will only be executed when a TiDB cluster bootstrap on the first time.\nThe field should be set ONLY when create a TC, since it only take effect on the first time bootstrap.\nOnly v6.5.1+ supports this feature.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.customizedStartupProbe",
    "CustomizedStartupProbe is the customized startup probe for TiDB.\nYou can provide your own startup probe for TiDB.\nThe image will be an init container, and the tidb-server container will copy the probe binary from it, and execute it.\nThe probe binary in the image should be placed under the root directory, i.e., `/your-probe`.",
    "object",
    {
      "args": {
        "description": "Args is the arguments of the probe binary.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "binaryName": {
        "description": "BinaryName is the name of the probe binary.",
        "type": "string"
      },
      "failureThreshold": {
        "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
        "format": "int32",
        "type": "integer"
      },
      "image": {
        "description": "Image is the image of the probe binary.",
        "type": "string"
      },
      "initialDelaySeconds": {
        "description": "Number of seconds after the container has started before liveness probes are initiated.",
        "format": "int32",
        "type": "integer"
      },
      "periodSeconds": {
        "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
        "format": "int32",
        "type": "integer"
      },
      "successThreshold": {
        "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
        "format": "int32",
        "type": "integer"
      },
      "timeoutSeconds": {
        "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.",
        "format": "int32",
        "type": "integer"
      }
    },
    [
      "binaryName",
      "image"
    ]
  ],
  [
    "spec.tidb.customizedStartupProbe.args",
    "Args is the arguments of the probe binary.",
    "array",
    null,
    null
  ],
  [
    "spec.tidb.customizedStartupProbe.args.ITEM",
    null,
    "string",
    null,
    null
  ],
  [
    "spec.tidb.customizedStartupProbe.binaryName",
    "BinaryName is the name of the probe binary.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.customizedStartupProbe.image",
    "Image is the image of the probe binary.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.postStart.httpGet",
    "HTTPGet specifies the http request to perform.",
    "object",
    {
      "host": {
        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
        "type": "string"
      },
      "httpHeaders": {
        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
        "items": {
          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
          "properties": {
            "name": {
              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
              "type": "string"
            },
            "value": {
              "description": "The header field value",
              "type": "string"
            }
          },
          "required": [
            "name",
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "path": {
        "description": "Path to access on the HTTP server.",
        "type": "string"
      },
      "port": {
        "anyOf": [
          {
            "type": "integer"
          },
          {
            "type": "string"
          }
        ],
        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
        "x-kubernetes-int-or-string": true
      },
      "scheme": {
        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
        "type": "string"
      }
    },
    [
      "port"
    ]
  ],
  [
    "spec.tidb.lifecycle.postStart.httpGet.host",
    "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.postStart.httpGet.httpHeaders",
    "Custom headers to set in the request. HTTP allows repeated headers.",
    "array",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.postStart.httpGet.httpHeaders.ITEM",
    "HTTPHeader describes a custom header to be used in HTTP probes",
    "object",
    {
      "name": {
        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
        "type": "string"
      },
      "value": {
        "description": "The header field value",
        "type": "string"
      }
    },
    [
      "name",
      "value"
    ]
  ],
  [
    "spec.tidb.lifecycle.postStart.httpGet.httpHeaders.ITEM.name",
    "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.postStart.httpGet.httpHeaders.ITEM.value",
    "The header field value",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.postStart.httpGet.path",
    "Path to access on the HTTP server.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.postStart.httpGet.port",
    "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
    "opaque",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.postStart.httpGet.scheme",
    "Scheme to use for connecting to the host.\nDefaults to HTTP.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.postStart.tcpSocket",
    "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified.",
    "object",
    {
      "host": {
        "description": "Optional: Host name to connect to, defaults to the pod IP.",
        "type": "string"
      },
      "port": {
        "anyOf": [
          {
            "type": "integer"
          },
          {
            "type": "string"
          }
        ],
        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
        "x-kubernetes-int-or-string": true
      }
    },
    [
      "port"
    ]
  ],
  [
    "spec.tidb.lifecycle.postStart.tcpSocket.host",
    "Optional: Host name to connect to, defaults to the pod IP.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.postStart.tcpSocket.port",
    "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
    "opaque",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.preStop.httpGet",
    "HTTPGet specifies the http request to perform.",
    "object",
    {
      "host": {
        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
        "type": "string"
      },
      "httpHeaders": {
        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
        "items": {
          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
          "properties": {
            "name": {
              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
              "type": "string"
            },
            "value": {
              "description": "The header field value",
              "type": "string"
            }
          },
          "required": [
            "name",
            "value"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "path": {
        "description": "Path to access on the HTTP server.",
        "type": "string"
      },
      "port": {
        "anyOf": [
          {
            "type": "integer"
          },
          {
            "type": "string"
          }
        ],
        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
        "x-kubernetes-int-or-string": true
      },
      "scheme": {
        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
        "type": "string"
      }
    },
    [
      "port"
    ]
  ],
  [
    "spec.tidb.lifecycle.preStop.httpGet.host",
    "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.preStop.httpGet.httpHeaders",
    "Custom headers to set in the request. HTTP allows repeated headers.",
    "array",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.preStop.httpGet.httpHeaders.ITEM",
    "HTTPHeader describes a custom header to be used in HTTP probes",
    "object",
    {
      "name": {
        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
        "type": "string"
      },
      "value": {
        "description": "The header field value",
        "type": "string"
      }
    },
    [
      "name",
      "value"
    ]
  ],
  [
    "spec.tidb.lifecycle.preStop.httpGet.httpHeaders.ITEM.name",
    "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.preStop.httpGet.httpHeaders.ITEM.value",
    "The header field value",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.preStop.httpGet.path",
    "Path to access on the HTTP server.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.preStop.httpGet.port",
    "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
    "opaque",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.preStop.httpGet.scheme",
    "Scheme to use for connecting to the host.\nDefaults to HTTP.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.preStop.tcpSocket",
    "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified.",
    "object",
    {
      "host": {
        "description": "Optional: Host name to connect to, defaults to the pod IP.",
        "type": "string"
      },
      "port": {
        "anyOf": [
          {
            "type": "integer"
          },
          {
            "type": "string"
          }
        ],
        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
        "x-kubernetes-int-or-string": true
      }
    },
    [
      "port"
    ]
  ],
  [
    "spec.tidb.lifecycle.preStop.tcpSocket.host",
    "Optional: Host name to connect to, defaults to the pod IP.",
    "string",
    null,
    null
  ],
  [
    "spec.tidb.lifecycle.preStop.tcpSocket.port",
    "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
    "opaque",
    null,
    null
  ],
  [
    "spec.tidb.plugins",
    "Plugins is a list of plugins that are loaded by TiDB server, empty means plugin disabled",
    "array",
    null,
    null
  ],
  [
    "spec.tidb.plugins.ITEM",
    null,
    "string",
    null,
    null
  ],
  [
    "spec.tidb.scalePolicy",
    "ScalePolicy is the scale configuration for TiDB.",
    "object",
    {
      "scaleInParallelism": {
        "default": 1,
        "description": "ScaleInParallelism configures max scale in replicas for TiKV stores.",
        "format": "int32",
        "type": "integer"
      },
      "scaleOutParallelism": {
        "default": 1,
        "description": "ScaleOutParallelism configures max scale out replicas for TiKV stores.",
        "format": "int32",
        "type": "integer"
      }
    },
    null
  ],
  [
    "spec.tiflash.limits",
    "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
    "object",
    null,
    null
  ],
  [
    "spec.tiflash.limits.additional_properties",
    null,
    "opaque",
    null,
    null
  ],
  [
    "spec.tiflash.scalePolicy",
    "ScalePolicy is the scale configuration for TiFlash",
    "object",
    {
      "scaleInParallelism": {
        "default": 1,
        "description": "ScaleInParallelism configures max scale in replicas for TiKV stores.",
        "format": "int32",
        "type": "integer"
      },
      "scaleOutParallelism": {
        "default": 1,
        "description": "ScaleOutParallelism configures max scale out replicas for TiKV stores.",
        "format": "int32",
        "type": "integer"
      }
    },
    null
  ],
  [
    "spec.tikv.limits.additional_properties",
    null,
    "opaque",
    null,
    null
  ],
  [
    "spec.tikv.scalePolicy",
    "ScalePolicy is the scale configuration for TiKV",
    "object",
    {
      "scaleInParallelism": {
        "default": 1,
        "description": "ScaleInParallelism configures max scale in replicas for TiKV stores.",
        "format": "int32",
        "type": "integer"
      },
      "scaleOutParallelism": {
        "default": 1,
        "description": "ScaleOutParallelism configures max scale out replicas for TiKV stores.",
        "format": "int32",
        "type": "integer"
      }
    },
    null
  ],
  [
    "spec.tikv.storeLabels",
    "StoreLabels configures additional labels for TiKV stores.",
    "array",
    null,
    null
  ],
  [
    "spec.tikv.storeLabels.ITEM",
    null,
    "string",
    null,
    null
  ],
  [
    "spec.tiproxy.config",
    "Config is the Configuration of tiproxy-servers",
    "opaque",
    null,
    null
  ],
  [
    "spec.tiproxy.tlsClientSecretName",
    "TLSClientSecretName is the name of secret which stores tidb server client certificate\nused by TiProxy to check health status.",
    "string",
    null,
    null
  ]
]