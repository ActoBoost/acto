import known_schemas

WHITEBOX = [
]

BLACKBOX = [
    known_schemas.K8sField(['spec', 'affinity'], known_schemas.AffinitySchema),
    known_schemas.K8sField(['spec', 'discovery', 'additionalContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'discovery', 'additionalVolumes', 'ITEM'], known_schemas.VolumeSchema),
    known_schemas.K8sField(['spec', 'discovery', 'affinity'], known_schemas.AffinitySchema),
    known_schemas.K8sField(['spec', 'discovery', 'initContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'discovery', 'podSecurityContext'], known_schemas.PodSecurityContextSchema),
    known_schemas.K8sField(['spec', 'discovery', 'tolerations'], known_schemas.TolerationsSchema),
    known_schemas.K8sField(['spec', 'pd', 'service', 'type'], known_schemas.ServiceTypeSchema),
    known_schemas.K8sField(['spec', 'pd', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'pd', 'storageVolumes', 'ITEM', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'pd', 'additionalContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'pd', 'additionalVolumes', 'ITEM'], known_schemas.VolumeSchema),
    known_schemas.K8sField(['spec', 'pd', 'affinity'], known_schemas.AffinitySchema),
    known_schemas.K8sField(['spec', 'pd', 'initContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'pd', 'podSecurityContext'], known_schemas.PodSecurityContextSchema),
    known_schemas.K8sField(['spec', 'pd', 'tolerations'], known_schemas.TolerationsSchema),
    known_schemas.K8sField(['spec', 'podSecurityContext'], known_schemas.PodSecurityContextSchema),
    known_schemas.K8sField(['spec', 'pump', 'additionalContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'pump', 'additionalVolumes', 'ITEM'], known_schemas.VolumeSchema),
    known_schemas.K8sField(['spec', 'pump', 'affinity'], known_schemas.AffinitySchema),
    known_schemas.K8sField(['spec', 'pump', 'initContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'pump', 'podSecurityContext'], known_schemas.PodSecurityContextSchema),
    known_schemas.K8sField(['spec', 'pump', 'tolerations'], known_schemas.TolerationsSchema),
    known_schemas.K8sField(['spec', 'pump', 'replicas'], known_schemas.ReplicasSchema),
    known_schemas.K8sField(['spec', 'serviceAccount'], known_schemas.ServiceAccountNameSchema),
    known_schemas.K8sField(['spec', 'ticdc', 'additionalContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'ticdc', 'additionalVolumes', 'ITEM'], known_schemas.VolumeSchema),
    known_schemas.K8sField(['spec', 'ticdc', 'affinity'], known_schemas.AffinitySchema),
    known_schemas.K8sField(['spec', 'ticdc', 'initContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'ticdc', 'podSecurityContext'], known_schemas.PodSecurityContextSchema),
    known_schemas.K8sField(['spec', 'ticdc', 'tolerations'], known_schemas.TolerationsSchema),
    known_schemas.K8sField(['spec', 'ticdc', 'serviceAccount'], known_schemas.ServiceAccountNameSchema),
    known_schemas.K8sField(['spec', 'ticdc', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'ticdc', 'storageVolumes', 'ITEM', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'tidb', 'additionalContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'tidb', 'additionalVolumes', 'ITEM'], known_schemas.VolumeSchema),
    known_schemas.K8sField(['spec', 'tidb', 'affinity'], known_schemas.AffinitySchema),
    known_schemas.K8sField(['spec', 'tidb', 'initContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'tidb', 'podSecurityContext'], known_schemas.PodSecurityContextSchema),
    known_schemas.K8sField(['spec', 'tidb', 'tolerations'], known_schemas.TolerationsSchema),
    known_schemas.K8sField(['spec', 'tidb', 'service', 'type'], known_schemas.ServiceTypeSchema),
    known_schemas.K8sField(['spec', 'tidb', 'serviceAccount'], known_schemas.ServiceAccountNameSchema),
    known_schemas.K8sField(['spec', 'tidb', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'tidb', 'storageVolumes', 'ITEM', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'additionalContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'additionalVolumes', 'ITEM'], known_schemas.VolumeSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'affinity'], known_schemas.AffinitySchema),
    known_schemas.K8sField(['spec', 'tiflash', 'initContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'initializer'], known_schemas.ResourceRequirementsSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'logTailer'], known_schemas.ResourceRequirementsSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'podSecurityContext'], known_schemas.PodSecurityContextSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'storageClaims', 'ITEM', 'resources'], known_schemas.ResourceRequirementsSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'tolerations'], known_schemas.TolerationsSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'tiflash', 'storageVolumes', 'ITEM', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'tikv', 'additionalContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'tikv', 'additionalVolumes', 'ITEM'], known_schemas.VolumeSchema),
    known_schemas.K8sField(['spec', 'tikv', 'affinity'], known_schemas.AffinitySchema),
    known_schemas.K8sField(['spec', 'tikv', 'initContainers', 'ITEM'], known_schemas.ContainerSchema),
    known_schemas.K8sField(['spec', 'tikv', 'logTailer'], known_schemas.ResourceRequirementsSchema),
    known_schemas.K8sField(['spec', 'tikv', 'podSecurityContext'], known_schemas.PodSecurityContextSchema),
    known_schemas.K8sField(['spec', 'tikv', 'tolerations'], known_schemas.TolerationsSchema),
    known_schemas.K8sField(['spec', 'tikv', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'tikv', 'storageVolumes', 'ITEM', 'storageClassName'], known_schemas.StorageClassNameSchema),
    known_schemas.K8sField(['spec', 'tolerations'], known_schemas.TolerationsSchema),
]